"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u-+c$gs%wogh4(^r#aq=8nlkx9%ca+-#!ie4dtw6n+$x*#n29a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'musicBlog',  #an app for the blogsite itself
    'users',      #an app for users
    'storages',   #an app for AWS
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')    # this is the directory where the media files will be stored

MEDIA_URL = '/media/'                           # this is the url where the media files will be accessed

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'blog-home' #built-in setting to redirect to home page after login

LOGIN_URL = 'login' #built-in setting to redirect to login page if not logged in

CRISPY_TEMPLATE_PACK = 'bootstrap4'

ALLOWED_HOSTS = ['.vercel.app', '.now.sh']

"""
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'    #this is the backend for sending emails using SMTP 
EMAIL_HOST = 'smtp.gmail.com'                                    #this is the host for sending emails using SMTP FOR GMAIL
EMAIL_PORT = 587                                                 #this is the port for sending emails using SMTP FOR GMAIL
EMAIL_USE_TLS = True                                             #this is the TLS for sending emails using SMTP FOR GMAIL
EMAIL_HOST_USER = os.environ.get('EMAIL_USER')                  #this is the host user for sending emails 
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')              #this is the host password for sending emails 
"""

AWS_S3_REGION_NAME = 'us-east-1' #change to your region
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID') #this is the access key id for AWS
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY') #this is the secret access key for AWS
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME') #this is the bucket name for AWS
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


STATICFILES_DIRS = os.path.join(BASE_DIR, 'static') #this is the directory where the static files will be stored
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build','static') #this is the directory where the static files will be stored